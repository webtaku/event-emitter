{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAEA,MAAe,YAAY;IACzB,UAAU,GAA+D,EAAE,CAAC;IAE5E,EAAE,CAAoB,GAAM,EAAE,QAAc;QAC1C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;YAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,CAAoB,GAAM,EAAE,QAAc;QAC5C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;YAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,GAAG,CAAoB,GAAM,EAAE,QAAc;QAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;QACrE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,IAAI,CAAoB,GAAM,EAAE,GAAG,IAAsB;QAC7D,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM;YAAE,OAAO,EAAE,CAAC;QAEvB,MAAM,OAAO,GAAuB,EAAE,CAAC;QACvC,MAAM,QAAQ,GAAgC,EAAE,CAAC;QAEjD,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;YAC3B,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;YACvC,IAAI,KAAK,CAAC,IAAI;gBAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAI,MAAM,YAAY,OAAO;gBAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;gBAChD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC;QAED,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrD,CAAC;CACF;AAED,OAAO,EAAE,YAAY,EAAY,CAAC","sourcesContent":["type EventMap = Record<string, (...args: any[]) => any>;\n\nabstract class EventEmitter<E extends EventMap> {\n  #listeners: { [K in keyof E]?: { listener: E[K]; once?: boolean; }[] } = {};\n\n  on<K extends keyof E>(key: K, listener: E[K]): this {\n    if (!this.#listeners[key]) this.#listeners[key] = [];\n    this.#listeners[key].push({ listener });\n    return this;\n  }\n\n  once<K extends keyof E>(key: K, listener: E[K]): this {\n    if (!this.#listeners[key]) this.#listeners[key] = [];\n    this.#listeners[key].push({ listener, once: true });\n    return this;\n  }\n\n  off<K extends keyof E>(key: K, listener: E[K]): this {\n    const events = this.#listeners[key];\n    if (!events) return this;\n    this.#listeners[key] = events.filter((e) => e.listener !== listener);\n    if (this.#listeners[key].length === 0) delete this.#listeners[key];\n    return this;\n  }\n\n  async emit<K extends keyof E>(key: K, ...args: Parameters<E[K]>): Promise<ReturnType<E[K]>[]> {\n    const events = this.#listeners[key];\n    if (!events) return [];\n\n    const results: ReturnType<E[K]>[] = [];\n    const promises: Promise<ReturnType<E[K]>>[] = [];\n\n    for (const event of events) {\n      const result = event.listener(...args);\n      if (event.once) this.off(key, event.listener);\n      if (result instanceof Promise) promises.push(result);\n      else results.push(result);\n    }\n\n    return results.concat(await Promise.all(promises));\n  }\n}\n\nexport { EventEmitter, EventMap };\n\n"]}